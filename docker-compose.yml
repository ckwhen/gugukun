version: "3.9"

services:
  db:
    container_name: gugukun_db
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
      interval: 5s
      retries: 5
      start_period: 10s

  migrate:
    build: .
    restart: "no"
    environment:
      - DB_HOST=gugukun_db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
    depends_on:
      - db
    command: [
      "bash", "-c",
      "sleep 5 && npm run db:migrate"
    ]

  app:
    build: .
    container_name: gugukun_bot
    restart: always
    environment:
      - DB_HOST=gugukun_db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - LINE_CHANNEL_SECRET=${LINE_CHANNEL_SECRET}
      - LINE_CHANNEL_ACCESS_TOKEN=${LINE_CHANNEL_ACCESS_TOKEN}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    command: [
      "bash", "-c",
      "sleep 5 && node app/index.js"
    ]

volumes:
  db_data:
